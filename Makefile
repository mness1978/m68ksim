# Compiler and Flags
CC = gcc
# -g adds debugging symbols
# -MMD -MP enables automatic dependency generation
CFLAGS = -Wall -Wextra -std=c99 -g -Isrc -MMD -MP

# Linker Flags (if any)
LDFLAGS =

# PackCC command
PACKCC = ./packcc

# --- Source Files ---

# Manually list C source files that are written by hand
SOURCES = src/cpu.c src/disassembler.c src/executor.c src/loader.c src/main.c src/memory.c

# Define the files generated by packcc
PARSER_PEG = src/operand_parser.peg
PARSER_C = src/operand_parser.c
PARSER_H = src/operand_parser.h

# --- Generated File Lists ---

# All object files are derived from the handwritten sources plus the generated parser source
OBJECTS = $(SOURCES:.c=.o) $(PARSER_C:.c=.o)

# All dependency files (.d), which are generated by the compiler
DEPS = $(OBJECTS:.o=.d)

# The final executable name
EXECUTABLE = 68k_sim

# --- Build Rules ---

# The default goal: build the executable.
# Add 'debug' to the list of phony targets
.PHONY: all debug clean
all: $(EXECUTABLE)

# NEW: Debug target.
# This target cleans first to ensure a full rebuild, then re-invokes make
# for the 'all' target, but passes an overridden CFLAGS variable.
debug:
	@echo "--- Building in DEBUG mode ---"
	$(MAKE) clean
	$(MAKE) CFLAGS="$(CFLAGS) -DDEBUG_PARSER" all

# Rule to link the final executable from all object files.
$(EXECUTABLE): $(OBJECTS)
	$(CC) $(LDFLAGS) $(OBJECTS) -o $@

# Rule to generate the parser files from the .peg file.
# This rule makes both the .c and .h file. It will run if either is missing
# or if the .peg file is newer.
$(PARSER_C) $(PARSER_H): $(PARSER_PEG)
	@echo "Generating parser from $<..."
	@$(PACKCC) -o src/operand_parser $<

# The generic rule for compiling a .c file into a .o file.
# This works for both handwritten and generated .c files.
# It now depends on the generated parser header file as well, ensuring
# the parser is generated before any compilation starts.
%.o: %.c $(PARSER_H)
	$(CC) $(CFLAGS) -c $< -o $@

# --- Cleanup ---

clean:
	@echo "Cleaning up..."
	rm -f $(EXECUTABLE) src/*.o src/*.d $(PARSER_C) $(PARSER_H)

# Include all the automatically generated dependency files.
# The hyphen tells make to ignore errors if the files don't exist yet.
-include $(DEPS)